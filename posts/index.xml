<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on A10ng_&#39;s Blog</title>
    <link>https://a10nggg.github.io/posts/</link>
    <description>Recent content in Posts on A10ng_&#39;s Blog</description>
    <generator>Hugo -- 0.123.8</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 10 Feb 2023 16:17:18 +0000</lastBuildDate>
    <atom:link href="https://a10nggg.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一个OneNote钓鱼样本分析</title>
      <link>https://a10nggg.github.io/archives/399/</link>
      <pubDate>Fri, 10 Feb 2023 16:17:18 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/399/</guid>
      <description>一个OneNote钓鱼样本分析 前言 拿到了两个One Note的钓鱼样本。以为是个OneNote的0day，这不得分析分析搞一手。就花了点时间分</description>
    </item>
    <item>
      <title>go免杀捆绑器</title>
      <link>https://a10nggg.github.io/archives/394/</link>
      <pubDate>Fri, 14 Oct 2022 07:39:33 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/394/</guid>
      <description>利用https://github.com/Yihsiwei/GoFileBinder改了加密算法和编译混淆。最开始不加混淆是可以过的，可能是</description>
    </item>
    <item>
      <title>免杀笔记（一）</title>
      <link>https://a10nggg.github.io/archives/390/</link>
      <pubDate>Thu, 22 Sep 2022 15:44:44 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/390/</guid>
      <description>xxx</description>
    </item>
    <item>
      <title>2022蓝帽决赛部分WP（awdp）</title>
      <link>https://a10nggg.github.io/archives/370/</link>
      <pubDate>Thu, 22 Sep 2022 15:43:55 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/370/</guid>
      <description>web出得有点晚了，早点就好了，为啥每次打ap都只能出一个web。。。 摸了个21名， 安全的系统 操作内容： 防御： 打开发现题目中config.p</description>
    </item>
    <item>
      <title>CVE-2022-30190</title>
      <link>https://a10nggg.github.io/archives/357/</link>
      <pubDate>Fri, 02 Sep 2022 13:35:06 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/357/</guid>
      <description>好久以前写的了，忘发了。。。 前言 昨天大哥扔了个MS office 0day（CVE-2022-30190）的截图到群里，晚上就复现了一下 ，随即有了下文 。 攻</description>
    </item>
    <item>
      <title>ARL增强版搭建</title>
      <link>https://a10nggg.github.io/archives/342/</link>
      <pubDate>Fri, 02 Sep 2022 13:09:52 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/342/</guid>
      <description>拉取项目 首先从GitHub克隆到服务器上。 git clone https://github.com/ki9mu/ARL-plus-docker/ 修改配置文件 因为ARL在配置文件里设置了黑名单，有时候项目为GOV或者EDU之类的时候无法进</description>
    </item>
    <item>
      <title>Nuclei POC模板编写笔记（二）</title>
      <link>https://a10nggg.github.io/archives/338/</link>
      <pubDate>Mon, 08 Aug 2022 06:45:31 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/338/</guid>
      <description>继续摸！ 匹配器 匹配器允许对协议响应进行不同类型的灵活比较。非常易于编写，并且可以根据需要添加多个检查以实现非常有效的扫描。 类型 可以在请求中指</description>
    </item>
    <item>
      <title>Nuclei POC模板编写笔记（一）</title>
      <link>https://a10nggg.github.io/archives/325/</link>
      <pubDate>Sun, 07 Aug 2022 08:54:50 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/325/</guid>
      <description>打不动了，开摸，很多地方（其实是基本上）都是cv的，原文是英文的，阅读不方便，记下来方便自己看看。。 基本介绍 id ID 不得包含空格。这样做是为了让</description>
    </item>
    <item>
      <title>第十五届全国大学生信息安全竞赛创新实践能力赛</title>
      <link>https://a10nggg.github.io/archives/281/</link>
      <pubDate>Sun, 29 May 2022 13:48:21 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/281/</guid>
      <description>基于挑战码的双向认证1 这两个应该是属于非预期，查找文件内容，两个flag都出了： find / |xargs grep -ri flag{ 2&amp;gt;/dev/null flag{34f5fdaf-c373-47fd-afab-01ed2914c11a} 基于挑战码的双向认证2 解题步骤同上 基于挑战码</description>
    </item>
    <item>
      <title>DLL劫持（学习笔记）</title>
      <link>https://a10nggg.github.io/archives/267/</link>
      <pubDate>Fri, 06 May 2022 14:38:02 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/267/</guid>
      <description>什么是DLL DLL(Dynamic Link Library)文件为动态链接库文件，又称“应用程序拓展”，是软件文件类型。在Windows中，许多应用程序并不是一个完整的</description>
    </item>
    <item>
      <title>浅试Viper</title>
      <link>https://a10nggg.github.io/archives/241/</link>
      <pubDate>Fri, 15 Apr 2022 13:43:13 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/241/</guid>
      <description>Viper(炫彩蛇) Viper(炫彩蛇)是一款图形化内网渗透工具,将内网渗透过程中常用的战术及技术进行模块化及武器化.Viper基于msf二</description>
    </item>
    <item>
      <title>CTFSHOW-WEB入门-反序列化</title>
      <link>https://a10nggg.github.io/archives/237/</link>
      <pubDate>Thu, 14 Apr 2022 08:46:32 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/237/</guid>
      <description>web254 &amp;lt;?php /* # -*- coding: utf-8 -*- # @Author: h1xa # @Date: 2020-12-02 17:44:47 # @Last Modified by: h1xa # @Last Modified time: 2020-12-02 19:29:02 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ error_reporting(0); highlight_file(__FILE__); include(&amp;#039;flag.php&amp;#039;); class ctfShowUser{ public $username=&amp;#039;xxxxxx&amp;#039;; public $password=&amp;#039;xxxxxx&amp;#039;; public $isVip=false; public function checkVip(){ return $this-&amp;gt;isVip; } public function login($u,$p){ if($this-&amp;gt;username===$u&amp;&amp;$this-&amp;gt;password===$p){ $this-&amp;gt;isVip=true; } return $this-&amp;gt;isVip; } public function vipOneKeyGetFlag(){ if($this-&amp;gt;isVip){ global $flag; echo &#34;your flag is &#34;.$flag;</description>
    </item>
    <item>
      <title>Burp Suite抓取https包原理</title>
      <link>https://a10nggg.github.io/archives/231/</link>
      <pubDate>Wed, 06 Apr 2022 04:55:35 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/231/</guid>
      <description>https请求 之前面试问到了BurpSuite抓取https包原理这个问题，在面试官的提示下大概答出来了。在这里再总结一下。 首先说一下htt</description>
    </item>
    <item>
      <title>Java多线程笔记</title>
      <link>https://a10nggg.github.io/archives/214/</link>
      <pubDate>Wed, 06 Apr 2022 01:15:51 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/214/</guid>
      <description>Thread start方法 ​ start()用来启动一个线程，当调用start方法后，系统才会开启一个新的线程来执行用户定义的子任务，在这个过程中，会为</description>
    </item>
    <item>
      <title>红明谷2022部分wp</title>
      <link>https://a10nggg.github.io/archives/198/</link>
      <pubDate>Tue, 22 Mar 2022 12:26:12 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/198/</guid>
      <description>WEB Fan website 根据题目描述，发现这是一个zf框架，网上有很多链子，但是需要一个入口点，在首页没有发现 啥有用的玩意儿。 扫描目录，得到源码，www.zi</description>
    </item>
    <item>
      <title>虎符2022部分wp</title>
      <link>https://a10nggg.github.io/archives/189/</link>
      <pubDate>Sun, 20 Mar 2022 10:50:16 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/189/</guid>
      <description>WEB babysql 根据官方给的hint，这是个 regexp 还有也给了一个hint.md. CREATE TABLE `auth` ( `id` int NOT NULL AUTO_INCREMENT, `username` varchar(32) NOT NULL, `password` varchar(32) NOT NULL, PRIMARY KEY (`id`), UNIQUE KEY `auth_username_uindex` (`username`) ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci; import { Injectable } from &#39;@nestjs/common&#39;; import {</description>
    </item>
    <item>
      <title>[TQLCTF2022] Simple PHP WP</title>
      <link>https://a10nggg.github.io/archives/171/</link>
      <pubDate>Mon, 21 Feb 2022 13:22:27 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/171/</guid>
      <description>做杂项写脚本写到头皮发麻的ctf，我只遇到这一次，呜呜呜~还是我太菜了。。 这个题很有意思，写shell的姿势比较好玩，我在之前搞渗透的时候同</description>
    </item>
    <item>
      <title>Ubuntu重启后直接进入tty1的解决办法</title>
      <link>https://a10nggg.github.io/archives/163/</link>
      <pubDate>Wed, 09 Feb 2022 06:47:36 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/163/</guid>
      <description>网上说打开startx,但是我的机器显示没有这个命令。 直接安装一下ubuntu图形化。 发现没有网络。 先连接网络， sudo dhclient eth0 虚拟机提示cannot</description>
    </item>
    <item>
      <title>fofa场景——内网死角WP</title>
      <link>https://a10nggg.github.io/archives/158/</link>
      <pubDate>Sun, 06 Feb 2022 11:20:01 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/158/</guid>
      <description>入口 入口是CVE-2021-3129，也就是Laravel Debug页面RCE，这里主要是搞内网。脚本一把梭了上传webshell。哥斯拉连</description>
    </item>
    <item>
      <title>Synaptics蠕虫病毒清理</title>
      <link>https://a10nggg.github.io/archives/152/</link>
      <pubDate>Sun, 23 Jan 2022 07:56:29 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/152/</guid>
      <description>丢脸，中蠕虫了。 症状就是他会感染exe文件，没有图标他会贴心的给你换上一个巨丑无比的图标，然后就变成了病原体。xls会被强行加上宏，变成xl</description>
    </item>
    <item>
      <title>MySQL写Shell</title>
      <link>https://a10nggg.github.io/archives/132/</link>
      <pubDate>Thu, 20 Jan 2022 09:32:32 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/132/</guid>
      <description>日志写马 条件 MySQL的两个全局变量： general_log指的是日志保存状态，一共有两个值（ON/OFF）ON代表开启 OFF代表关闭。 general_log_file 指</description>
    </item>
    <item>
      <title>fofa场景——st2入口内网WP</title>
      <link>https://a10nggg.github.io/archives/134/</link>
      <pubDate>Wed, 19 Jan 2022 13:05:37 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/134/</guid>
      <description>靶场拓扑图 {.wp-editor-md-post-content-link} 入口struts2 进去根据拓扑图发现是struts2，工具一把梭，然后在/tmp目录拿到flag。 {.wp-editor-md-post-content-link} 内网探测。 在拓扑图上发现有两</description>
    </item>
    <item>
      <title>R11s线刷降级</title>
      <link>https://a10nggg.github.io/archives/127/</link>
      <pubDate>Sat, 15 Jan 2022 07:10:45 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/127/</guid>
      <description>难点主要是破解MsmDownloadTool。虚拟机在装完之后恢复快照了，忘截图了。 在加密🐕上添加授权🐎后，仍然是连接超时。 卡了两天。 步骤大</description>
    </item>
    <item>
      <title>常用代理以及多层代理，端口转发</title>
      <link>https://a10nggg.github.io/archives/119/</link>
      <pubDate>Tue, 11 Jan 2022 07:53:46 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/119/</guid>
      <description>常见工具 {.wp-editor-md-post-content-link} EW 反向内网穿透 反向代理就是我们服务端监听，⽬标客户端连接我们的服务端，这就叫做反向代理。 也就是红队⼈员的 VPS 称之为客户端，开启了⼀个</description>
    </item>
    <item>
      <title>获取机器下各类密码</title>
      <link>https://a10nggg.github.io/archives/117/</link>
      <pubDate>Tue, 11 Jan 2022 07:34:26 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/117/</guid>
      <description>通过注册表抓取密码hash ⾸先我们需要把当前系统注册表 SAM、SYSTEM 获取到： 然后把这两个⽂件拖回本地然后⽤ mimikatz 抓取密码hash： reg save HKLM\SYSTEM Sys.hiv</description>
    </item>
    <item>
      <title>数据库提权</title>
      <link>https://a10nggg.github.io/archives/114/</link>
      <pubDate>Tue, 11 Jan 2022 07:29:41 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/114/</guid>
      <description>上传一个php大马，或者直接用webshell管理工具也行。 二、利用条件 1、常规情况： 1.1 mysql配置文件secure_file_priv项</description>
    </item>
    <item>
      <title>内网无域机器域渗透</title>
      <link>https://a10nggg.github.io/archives/112/</link>
      <pubDate>Tue, 11 Jan 2022 07:09:32 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/112/</guid>
      <description>攻击思路 1、通过nltest或者nbtscan找到域控，并且可以建立空连接 2、找到域控，但是无法建立空连接 3、没找到域控，但是通过nbtsc</description>
    </item>
    <item>
      <title>IPC$</title>
      <link>https://a10nggg.github.io/archives/101/</link>
      <pubDate>Tue, 11 Jan 2022 06:47:35 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/101/</guid>
      <description>IPC（共享命名管道资源）其实就是为了实现进程间通信⽽开放的命名管道；IPC可以通过验证⽤户名和密码 获得相应的权限，通常在远程管理计算机和查</description>
    </item>
    <item>
      <title>windows提权</title>
      <link>https://a10nggg.github.io/archives/98/</link>
      <pubDate>Tue, 11 Jan 2022 06:38:53 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/98/</guid>
      <description>⼀般常⻅的提权⽅法有：（当然还有很多提权⼿段） 本地溢出漏洞提权 数据库提权 第三⽅软件提权 MS16-032 提权 影响版本 Windows Vista Windows 7 Windows 8.1 Windows 10 Windows 2008 Server 直接运行提权exe</description>
    </item>
    <item>
      <title>内网信息收集</title>
      <link>https://a10nggg.github.io/archives/93/</link>
      <pubDate>Tue, 11 Jan 2022 06:29:12 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/93/</guid>
      <description>判断当前机器是否在域内 1.查看当前⽹卡和IP信息： ipconfig /all 如果是域，在主dns处是域名 2、查看系统详细信息 Systeminfo 域内机器能看到域的地方是一个域名，同</description>
    </item>
    <item>
      <title>DNSlog利用姿势总结</title>
      <link>https://a10nggg.github.io/archives/86/</link>
      <pubDate>Fri, 07 Jan 2022 13:04:09 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/86/</guid>
      <description>前言 在肾透的过程中，dnslog是不可或缺的好工具。在之前的log4j2的过年事件中，dnslog更是火了一波，直接被干崩了，xs。。。下边</description>
    </item>
    <item>
      <title>Redis_getshell的三种姿势（续）</title>
      <link>https://a10nggg.github.io/archives/80/</link>
      <pubDate>Fri, 07 Jan 2022 07:26:04 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/80/</guid>
      <description>前言 除了上一篇的主从复制rce，还有几种getshell的方式。下面来列举一下。 Redis简介 redis是一个使用C语言编写，开源高性能非关</description>
    </item>
    <item>
      <title>Redis_主从复制 RCE</title>
      <link>https://a10nggg.github.io/archives/77/</link>
      <pubDate>Thu, 06 Jan 2022 11:22:34 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/77/</guid>
      <description>Redis简介 redis是一个使用C语言编写，开源高性能非关系型的键值对存储系统，和memcached类似，在企业中一般被当作缓存中间件使用</description>
    </item>
    <item>
      <title>SSRF之gopher</title>
      <link>https://a10nggg.github.io/archives/72/</link>
      <pubDate>Wed, 05 Jan 2022 13:05:15 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/72/</guid>
      <description>一、什么是gopher Gopher是Internet上一个非常有名的信息查找系统，它将Internet上的文件组织成某种索引，很方便地将用户</description>
    </item>
    <item>
      <title>批量注册CTFd用户脚本</title>
      <link>https://a10nggg.github.io/archives/70/</link>
      <pubDate>Sun, 26 Dec 2021 14:13:57 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/70/</guid>
      <description>import requests import json url = &#39;这里填地址！！！&#39; user = [] passwd =[] Cookie = input(&#39;输入session：&#39;) CSRF = input(&#39;输入CSRF-Token：&#39;) headers = {&#39;Accept&#39;:&#39;application/json&#39;,&#39;Content-Type&#39;: &#39;application/json&#39;,&#39;Cookie&#39;:Cookie,</description>
    </item>
    <item>
      <title>国内快速搭建CTFd_笔记</title>
      <link>https://a10nggg.github.io/archives/68/</link>
      <pubDate>Sun, 26 Dec 2021 05:59:24 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/68/</guid>
      <description>安装docker-compose CTFd用dockers-compose安装比较方便。 所以在之前需要安装。百度上一大堆教程，这里就不说了。 当</description>
    </item>
    <item>
      <title>复现Apache CVE-2021-41773</title>
      <link>https://a10nggg.github.io/archives/64/</link>
      <pubDate>Tue, 21 Dec 2021 14:17:59 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/64/</guid>
      <description>前言 10月5号，Apache HTTP Server 项目修补了 CVE-2021-41773，这是 Apache HTTP Server 中的一个路径遍历和文件泄露漏洞，Apache HTTP Server 是一种用于</description>
    </item>
    <item>
      <title>记一次实战 CVE-2021-21972</title>
      <link>https://a10nggg.github.io/archives/58/</link>
      <pubDate>Tue, 21 Dec 2021 14:09:57 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/58/</guid>
      <description>最近看到几个公众号发关于CVE-2021-22005的帖子，但是发现大家都是纸上谈兵，没有实操的帖子是没有灵魂的。正好我前几天做渗透测试（正</description>
    </item>
    <item>
      <title>sql姿势总结（一）</title>
      <link>https://a10nggg.github.io/archives/55/</link>
      <pubDate>Tue, 21 Dec 2021 14:05:33 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/55/</guid>
      <description>mysql数据库基本操作语句可在以下博客学习。 https://blog.csdn.net/leiurse/article/details/106677106 SQL注入常用函数 mid()函数 SELECT MID(ColumnName, Start [, Length]) 从指定字段中提取出字段的内容 column_name</description>
    </item>
    <item>
      <title>rce_bypass</title>
      <link>https://a10nggg.github.io/archives/50/</link>
      <pubDate>Tue, 21 Dec 2021 13:33:09 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/50/</guid>
      <description>空格绕过： 在bash下可以用$IFS、${IFS}、$IFS$9、%09、&amp;lt;、&amp;gt;、&amp;lt;&amp;gt;、{,}（例如{cat,/et</description>
    </item>
    <item>
      <title>谷歌语法</title>
      <link>https://a10nggg.github.io/archives/48/</link>
      <pubDate>Tue, 21 Dec 2021 13:27:43 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/48/</guid>
      <description>我记得某某带佬跟我说过：信息收集是渗透的本质。 谷歌的爬虫非常强大，在前期的信息收集里能给我们提供非常大的帮助，轻则给你找到后台登录口，用户身</description>
    </item>
    <item>
      <title>log4j2_rce复现</title>
      <link>https://a10nggg.github.io/archives/29/</link>
      <pubDate>Tue, 21 Dec 2021 12:36:05 +0000</pubDate>
      <guid>https://a10nggg.github.io/archives/29/</guid>
      <description>拉取本地环境运行， docker pull vulfocus/log4j2-rce-2021-12-09:latest docker run -d -P vulfocus/log4j2-rce-2021-12-09:latest 1.首先在vps用JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar启</description>
    </item>
  </channel>
</rss>
